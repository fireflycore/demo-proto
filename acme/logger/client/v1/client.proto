syntax="proto3";

package acme.logger.client.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "acme/basic/v1/system.proto";
import "acme/basic/v1/client.proto";
import "acme/basic/v1/logger.proto";
import "acme/basic/v1/device.proto";

service ClientLoggerService {
  // 创建客户端日志
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/logger/client",
      body: "*",
    };
  };
  // 根据id查询客户端日志
  rpc FindById(FindByIdRequest) returns (FindByIdResponse) {
    option (google.api.http) = {
      get: "/v1/logger/client"
    };
  };
  // 查询客户端日志列表
  rpc FindList(FindListRequest) returns (FindListResponse) {
    option (google.api.http) = {
      get: "/v1/logger/client/list"
    };
  };
  // 根据id删除客户端日志
  rpc DeleteById(DeleteByIdRequest) returns (DeleteByIdResponse) {
    option (google.api.http) = {
      delete: "/v1/logger/client/{id}"
    };
  };
  // 根据ids删除客户端日志列表
  rpc DeleteByIds(DeleteByIdsRequest) returns (DeleteByIdsResponse) {
    option (google.api.http) = {
      put: "/v1/logger/client/delete",
      body: "*",
    };
  };
}

message Client {
  // 页面地址
  string path = 1;
  // 日志内容
  string content = 2;
  // 日志级别
  int32 level = 3;

  // 系统类型
  int32 system_type = 4;
  // 客户端类型
  int32 client_type = 5;
  // 设备形态
  int32 device_form_factor = 6;

  // 客户端名称
  string client_name = 7;
  // 客户端版本
  string client_version = 8;
  // 系统名称
  string system_name = 9;
  // 系统版本
  string system_version = 10;
  // 应用版本
  string app_version= 11;

  // 用户id
  string user_id = 12;
  // 应用id
  string app_id = 13;

  string id = 14;
  string created_at = 15;
}

message CreateRequest {
  // 页面地址
  string path = 1;
  // 日志内容
  string content = 2;
  // 日志级别
  basic.v1.LoggerLevel level = 3;

  // 系统类型
  basic.v1.SystemType system_type = 4;
  // 客户端类型
  basic.v1.ClientType client_type = 5;
  // 设备形态
  basic.v1.DeviceFormFactor device_form_factor = 6;

  // 客户端名称
  string client_name = 7;
  // 客户端版本
  string client_version = 8;
  // 系统名称
  string system_name = 9;
  // 系统版本
  string system_version = 10;
  // 应用版本
  string app_version= 11;

  // 用户id
  string user_id = 12;
  // 应用id
  string app_id = 13;
}
message CreateResponse {
  string message = 1;
  uint32 code = 2;
  // 空值无用意
  string data = 3;
}

message FindByIdRequest {
  string id = 1;
}
message FindByIdResponse {
  string message = 1;
  uint32 code = 2;
  Client data = 3;
}

message List {
  int64 total = 1;
  repeated Client list = 2;
}
message FindListRequest {
  uint64 page = 1;
  uint64 page_size = 2;
  string keyword = 3;

  string start_time = 4;
  string end_time = 5;

  // 日志级别
  basic.v1.LoggerLevel level = 6;
  // 系统类型
  basic.v1.SystemType system_type = 7;
  // 客户端类型
  basic.v1.ClientType client_type = 8;
  // 设备形态
  basic.v1.DeviceFormFactor device_form_factor = 9;

  // 客户端名称
  string client_name = 10;
  // 客户端版本
  string client_version = 11;
  // 系统名称
  string system_name = 12;
  // 系统版本
  string system_version = 13;
  // 应用版本
  string app_version = 14;

  // 用户id
  string user_id = 15;
  // 应用id
  string app_id = 16;
  // 日志id
  string id = 17;
}
message FindListResponse {
  string message = 1;
  uint32 code = 2;
  List data = 3;
}

message DeleteByIdRequest {
  string id = 1;
}
message DeleteByIdResponse {
  string message = 1;
  uint32 code = 2;
  // 空值无用意
  string data = 3;
}

message DeleteByIdsRequest {
  repeated string ids = 1;
}
message DeleteByIdsResponse {
  string message = 1;
  uint32 code = 2;
  // 空值无用意
  string data = 3;
}

// 定义Swagger元信息
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "ClientLogger";
    version: "1.0.0";
    description: "客户端日志";
    contact: {
      name: "梨花炖海棠";
      url: "https://github.com/lhdhtrc";
      email: "lhdhtr@gmail.com";
    };
  };
  security_definitions: {
    security: {
      key: "Authorization"
      value: {
        name: "Authorization"
        in: IN_HEADER
        type: TYPE_API_KEY
      }
    }
  }
  host: "192.168.1.100:10000";
  schemes: [HTTP];
  consumes: "application/json";
  produces: "application/json";
};
