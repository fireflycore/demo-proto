syntax="proto3";

package acme.logger.operation.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "acme/basic/v1/logger.proto";
import "acme/basic/v1/database.proto";

service OperationLoggerService {
  rpc Create(CreateRequest) returns (CreateResponse) {};
  // 根据日志id查询操作日志
  rpc FindById(FindByIdRequest) returns (FindByIdResponse) {
    option (google.api.http) = {
      get: "/v1/logger/operation/{id}"
    };
  };
  // 查询操作日志列表
  rpc FindList(FindListRequest) returns (FindListResponse) {
    option (google.api.http) = {
      get: "/v1/logger/operation/list"
    };
  };
  // 根据日志id删除操作日志
  rpc DeleteById(DeleteByIdRequest) returns (DeleteByIdResponse) {
    option (google.api.http) = {
      delete: "/v1/logger/operation/{id}"
    };
  };
}

message Operation {
  // 数据库
  string database = 1;
  // 操作语句
  string statement = 2;
  // 操作结果
  string result = 3;
  // 耗时
  uint64 duration = 4;

  // 日志级别
  basic.v1.LoggerLevel level = 5;
  // 数据库类型
  basic.v1.DatabaseType type = 6;

  // 链路id
  string trace_id = 7;
  // 账号id
  string account_id = 8;

  // 目标应用id
  string target_app_id = 9;
  // 调用应用id
  string invoke_app_id = 10;

  string id = 11;
  string created_at = 12;
}

message CreateRequest {
  // 数据库
  string database = 1;
  // 操作语句
  string statement = 2;
  // 操作结果
  string result = 3;
  // 耗时
  uint64 duration = 4;

  // 日志级别
  basic.v1.LoggerLevel level = 5;
  // 数据库类型
  basic.v1.DatabaseType type = 6;

  // 链路id
  string trace_id = 7;
  // 账号id
  string account_id = 8;

  // 目标应用id
  string target_app_id = 9;
  // 调用应用id
  string invoke_app_id = 10;
}
message CreateResponse {
  string message = 1;
  uint32 code = 2;
}

message FindByIdRequest {
  string id = 1;
}
message FindByIdResponse {
  string message = 1;
  uint32 code = 2;
  Operation data = 3;
}

message List {
  int64 total = 1;
  repeated Operation list = 2;
}
message FindListRequest {
  uint64 page = 1;
  uint64 page_size = 2;
  string keyword = 3;

  string start_time = 4;
  string end_time = 5;

  // 日志级别
  basic.v1.LoggerLevel level = 6;
  // 数据库类型
  basic.v1.DatabaseType type = 7;

  string trace_id = 8;
  string account_id = 9;
  string owner_app_id = 10;
  string invoke_app_id = 11;
  string id = 12;
}
message FindListResponse {
  string message = 1;
  uint32 code = 2;
  List data = 3;
}

message DeleteByIdRequest {
  string id = 1;
}
message DeleteByIdResponse {
  string message = 1;
  uint32 code = 2;
}

// 定义Swagger元信息
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "OperationLogger";
    version: "1.0.0";
    description: "操作日志";
    contact: {
      name: "梨花炖海棠";
      url: "https://github.com/lhdhtrc";
      email: "lhdhtr@gmail.com";
    };
  };
  security_definitions: {
    security: {
      key: "Authorization"
      value: {
        name: "Authorization"
        in: IN_HEADER
        type: TYPE_API_KEY
      }
    }
  }
  host: "192.168.1.100:10000";
  base_path: "/api";
  schemes: [HTTP];
  consumes: "application/json";
  produces: "application/json";
};
