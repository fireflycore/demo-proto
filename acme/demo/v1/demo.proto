syntax = "proto3";

package acme.demo.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

service DemoService {
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/demo",
      body: "*",
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      tags: ["demo"];
      operation_id: "create_demo";
      summary: "创建示例";
      description: "创建示例详细描述";
      deprecated: true; // 废弃
      responses: {
        key: "200";
        value: {
          description: "创建成功";
        };
      }
    };
  };
  rpc FindById(FindByIdRequest) returns (FindByIdResponse) {
    option (google.api.http) = {
      get: "/v1/demo/{id}",
    };
  };
  rpc FindList(FindListRequest) returns (FindListResponse) {
    option (google.api.http) = {
      get: "/v1/demo/list",
    };
  };
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
      put: "/v1/demo",
      body: "*",
    };
  };
  rpc DeleteById(DeleteByIdRequest) returns (DeleteByIdResponse) {
    option (google.api.http) = {
      delete: "/v1/demo/{id}",
    };
  };
}

message Author {
  string id = 1;
  string name = 2;
}

message Demo {
  string id = 1;
  string created_at = 2;
  string updated_at = 3;

  string title = 4;
  string description = 5;
  string content = 6;
  uint32 status = 7;
  uint32 sort = 8;

  Author author = 9;
}

message CreateRequest {
  string title = 1 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      description: "标题"
    }
  ];
  string description = 2 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      description: "描述"
    }
  ];
  string content = 3 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      description: "内容"
    }
  ];
  uint32 status = 4 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      description: "状态"
    }
  ];
  uint32 sort = 5 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      description: "排序"
    }
  ];
}
message CreateResponse {
  uint32 code = 1;
  string message = 2;
}

message FindByIdRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message FindByIdResponse {
  uint32 code = 1;
  string message = 2;
  Demo data = 3;
}

message List {
  int64 total = 1;
  repeated Demo list = 2;
}
message FindListRequest {
  uint64 page = 1;
  uint64 page_size = 2;
  string search_key = 3;
}
message FindListResponse {
  string message = 1;
  uint32 code = 2;
  List data = 3;
}

message UpdateRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
  string title = 2 [(buf.validate.field).required = true];
  string description = 3;
  string content = 4;
  uint32 status = 5;
  uint32 sort = 6;
}
message UpdateResponse {
  string message = 1;
  uint32 code = 2;
}

message DeleteByIdRequest {
  string id = 1 [(buf.validate.field).string.uuid = true];
}
message DeleteByIdResponse {
  string message = 1;
  uint32 code = 2;
}

// 定义Swagger元信息
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "DemoService";
    version: "1.0.0";
    description: "示例服务";
    contact: {
      name: "梨花炖海棠";
      url: "https://github.com/lhdhtrc";
      email: "lhdhtr@gmail.com";
    };
  };
  security_definitions: {
    security: {
      key: "Authorization"
      value: {
        name: "Authorization"
        in: IN_HEADER
        type: TYPE_API_KEY
      }
    }
  }
  host: "192.168.1.100:10000";
  base_path: "/api";
  schemes: [HTTP];
  consumes: "application/json";
  produces: "application/json";
};